name: Build and Deploy .NET 8 App to Azure

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
          
      - name: Debug Directory Structure
        run: ls -R
      
      - name: Restore Dependencies
        run: dotnet restore Backend/Backend.sln
      
      - name: Build Application
        run: dotnet build Backend/Backend.sln --configuration Release --no-restore
      
      - name: Run Tests
        run: dotnet test Backend/Backend.sln --no-restore --verbosity normal
      
      - name: Publish Application
        run: dotnet publish Backend/Backend.sln -c Release -o ./publish
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-app
          path: ./publish

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-app
          path: ./publish

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_CREDENTIALS }}
          package: ./publish

  migrate-db:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
    
    - name: Print Working Directory
      run: pwd
    
    - name: Debug Directory Structure
      run: ls -R
    
    - name: Install EF Core CLI Tool
      run: dotnet tool install --global dotnet-ef

    - name: Restore Project Dependencies
      run: dotnet restore Infrastructure/Infrastructure.csproj

    - name: Apply Database Migrations
      env:
        DATABASE_CONNECTION_STRING: ${{ secrets.DATABASE_CONNECTION_STRING }}
      run: dotnet ef database update --connection "$DATABASE_CONNECTION_STRING" --project Infrastructure/Infrastructure.csproj --startup-project Backend/Backend.csproj
